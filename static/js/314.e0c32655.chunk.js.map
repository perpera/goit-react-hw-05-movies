{"version":3,"file":"static/js/314.e0c32655.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.js","components/GoBackBtn/GoBackBtn.styled.js","components/GoBackBtn/GoBackBtn.js","pages/MovieDetails.js","tools/ScrollUp/ScrollUp.styled.js","tools/ScrollUp/ScrollUp.js","tools/getPercentage.js","tools/getReviewColor.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const InfoLine = styled.hr`\n  width: 100%;\n  border-color: #f2efee;\n`;\n\nexport const InfoContainer = styled.div`\n  padding: 60px 0;\n`;\n\nexport const InfoSection = styled.div`\n  position: relative;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(rgba(4, 4, 4, 0.4), rgba(4, 4, 4, 0.4))\n      no-repeat center/cover;\n    filter: blur(16px);\n    z-index: -1;\n  }\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 44px;\n  }\n`;\n\nexport const InfoPoster = styled.img`\n  width: 100%;\n  border-radius: 22px;\n\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 400px;\n  }\n`;\n\nexport const InfoTitle = styled.h2`\n  font-size: 26px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 40px;\n  }\n`;\n\nexport const MovieDescr = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 100%;\n  padding: 8px;\n  background-color: #dbdddb;\n  backdrop-filter: blur(16px);\n  border-radius: 22px;\nmin-height: 315px;\n`;\n\nexport const InfoScore = styled.span`\nwidth: 40px;\nheight: 40px;\nborder-radius:50%;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground-color: ${props => props.color};\n`;\n\nexport const ScoreText = styled.p`\ndisplay: flex;\ngap: 4px;\nalign-items: center;\n`;\n\nexport const InfoSubTitle = styled.h3`\nfont-size: 20px;\nfont-style: italic;\n`;\n\nexport const GenresList = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\ngap: 4px;\n`;\n","import {\n  Info,\n  InfoContainer,\n  InfoLine,\n  InfoPoster,\n  InfoScore,\n  InfoSection,\n  InfoSubTitle,\n  InfoTitle,\n  MovieDescr,\n  ScoreText,\n  GenresList,\n} from './MovieInfo.styled';\nimport { Container } from 'components/SharedLayout/SharedLayout.styled';\nimport getPercentage from 'tools/getPercentage';\nimport { getReviewColor } from 'tools/getReviewColor';\nimport defPoster from '../../img/def_poster.png';\n\nconst MovieInfo = ({\n  backdrop_path,\n  original_title,\n  poster_path,\n  rate_avg,\n  overview,\n  genres,\n}) => {\n  const posterUrl = `https://image.tmdb.org/t/p/w500${poster_path}`;\n  const posterSource = poster_path ? posterUrl : defPoster;\n  const backdropUrl = `https://image.tmdb.org/t/p/w500${backdrop_path}`;\n  const backdropSource = backdrop_path ? backdropUrl : defPoster;\n\n  return (\n    <Container>\n      <InfoContainer>\n        <InfoSection $backdropSource={backdropSource}>\n          <Info>\n            <InfoPoster src={posterSource} alt={original_title} />\n            <MovieDescr>\n              <InfoTitle>{original_title}</InfoTitle>\n              <InfoLine />\n              <ScoreText>\n                User score:{' '}\n                <InfoScore color={getReviewColor(getPercentage(rate_avg))}>\n                  {getPercentage(rate_avg)}%\n                </InfoScore>\n              </ScoreText>\n              <InfoSubTitle>Overview</InfoSubTitle>\n              <p>{overview}</p>\n              {genres.length > 0 && (\n                <>\n                  <InfoSubTitle>Genres</InfoSubTitle>\n                  <GenresList>\n                    {genres.map(genre => (\n                      <p key={genre.id}>{genre.name}</p>\n                    ))}\n                  </GenresList>\n                </>\n              )}\n            </MovieDescr>\n          </Info>\n        </InfoSection>\n      </InfoContainer>\n    </Container>\n  );\n};\n\nexport default MovieInfo;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const GoBackLink = styled(Link)`\n  margin-top: 24px;\n  display: flex;\n  gap: 4px;\n  padding: 4px;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  color: #f2efee;\n  border: 2px solid #f2efee;\n  border-radius: 22px;\n  transition: color 200ms linear, border-color 200ms linear;\n  &:hover,\n  &:focus {\n    color: #8bd538;\n    border-color: #8bd538;\n  }\n`;\n","import { Container } from 'components/SharedLayout/SharedLayout.styled';\nimport { GoBackLink } from './GoBackBtn.styled';\nimport { CiCircleChevLeft } from 'react-icons/ci';\n\nexport const GoBackBtn = ({ path }) => {\n  return (\n    <Container>\n      <GoBackLink to={path}>\n        <CiCircleChevLeft />\n        Go back\n      </GoBackLink>\n    </Container>\n  );\n};\n","import { useState, useEffect, Suspense } from 'react';\nimport { useLocation, useParams, Outlet } from 'react-router-dom';\nimport { getMovieById } from 'movies-api';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport {\n  Container,\n  LinkWrapper,\n  MovieInfoLink,\n} from 'components/SharedLayout/SharedLayout.styled';\nimport { ScrollUp } from 'tools/ScrollUp/ScrollUp';\nimport { Loader } from 'components/Loader/Loader';\nimport { GoBackBtn } from 'components/GoBackBtn/GoBackBtn';\nimport { notification } from 'tools/notification';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    setLoader(true);\n\n    const fetchMovieById = async () => {\n      try {\n        const movie = await getMovieById(movieId);\n\n        setMovieInfo(movie);\n      } catch ({ message }) {\n        notification(message);\n      } finally {\n        setLoader(false);\n      }\n    };\n    fetchMovieById();\n  }, [movieId]);\n\n  const goBackPath = location?.state?.from ?? '/';\n\n  return (\n    <Container>\n      {loader && <Loader />}\n      <GoBackBtn path={goBackPath} />\n      {movieInfo && <MovieInfo movie={movieInfo} />}\n      <LinkWrapper>\n        <MovieInfoLink to=\"cast\">Cast</MovieInfoLink>\n        <MovieInfoLink to=\"reviews\">Reviews</MovieInfoLink>\n      </LinkWrapper>\n      <ScrollUp />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n","import styled from 'styled-components';\n\nexport const ScrollUpBtn = styled.button`\n  width: 80px;\n  height: 80px;\n  position: fixed;\n  bottom: 40px;\n  right: 36px;\n  border-radius: 50%;\n  border: 3px solid #f2efee;\n  background-color: #8a1d21;\n  transition: transform 200ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { ScrollUpBtn } from './ScrollUp.styled';\nimport { CiCircleChevUp } from 'react-icons/ci';\n\nexport const ScrollUp = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollPosition = window.scrollY;\n      if (scrollPosition > 200) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <ScrollUpBtn\n      onClick={scrollToTop}\n      style={{ display: isVisible ? 'block' : 'none' }}\n    >\n      <CiCircleChevUp size={33} fill=\"#F2EFEE\" />\n    </ScrollUpBtn>\n  );\n};\n","const getPercentage = num => {\n  return Math.ceil(Number(num) * 10);\n};\n\nexport default getPercentage;\n","export const getReviewColor = percentage => {\n  let color = '';\n  switch (true) {\n    case percentage >= 70:\n      color = '#1cb114';\n      break;\n    case percentage > 30:\n      color = '#c3c737';\n      break;\n    case percentage === 0:\n      color = '#64645b';\n      break;\n    default:\n      color = '#8BD538';\n  }\n  return color;\n};\n"],"names":["InfoLine","styled","_templateObject","_taggedTemplateLiteral","InfoContainer","_templateObject2","InfoSection","_templateObject3","Info","_templateObject4","InfoPoster","_templateObject5","InfoTitle","_templateObject6","MovieDescr","_templateObject7","InfoScore","_templateObject8","props","color","ScoreText","_templateObject9","InfoSubTitle","_templateObject10","GenresList","_templateObject11","_ref","backdrop_path","original_title","poster_path","rate_avg","overview","genres","posterUrl","concat","posterSource","defPoster","backdropUrl","backdropSource","_jsx","Container","children","$backdropSource","_jsxs","src","alt","getReviewColor","getPercentage","length","_Fragment","map","genre","name","id","GoBackLink","Link","GoBackBtn","path","to","CiCircleChevLeft","MovieDetails","_location$state$from","_location$state","movieId","useParams","location","useLocation","movieInfo","setMovieInfo","useState","loader","setLoader","useEffect","async","movie","getMovieById","message","notification","fetchMovieById","goBackPath","state","from","Loader","MovieInfo","LinkWrapper","MovieInfoLink","ScrollUp","Suspense","fallback","Outlet","ScrollUpBtn","isVisible","setIsVisible","handleScroll","scrollPosition","window","scrollY","addEventListener","removeEventListener","onClick","scrollToTop","scrollTo","top","behavior","style","display","CiCircleChevUp","size","fill","num","Math","ceil","Number","percentage"],"sourceRoot":""}