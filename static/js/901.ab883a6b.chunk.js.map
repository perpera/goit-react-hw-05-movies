{"version":3,"file":"static/js/901.ab883a6b.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/MoviesSearch/MoviesSearch.styled.js","components/MoviesSearch/MoviesSearch.js","components/Pagination/Pagination.js","pages/Movies.js","tools/ScrollUp/ScrollUp.styled.js","tools/ScrollUp/ScrollUp.js","tools/getPercentage.js","tools/getReviewColor.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 40px;\n  padding: 60px 0;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n  transition: transform 200ms linear;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: calc((100%) - 80px) / 3;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc((100%) - 200px) / 6;\n  }\n`;\n\nexport const MovieTitle = styled.p`\n  text-align: center;\n  font-weight: 700;\n  font-size: 24px;\n  max-width: 300px;\n  color: #f2efee;\n\n  @media screen and (min-width: 428px) {\n    max-width: 398px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 200px;\n    font-size: 21px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const MoviePoster = styled.img`\n  width: 250px;\n\n  @media screen and (min-width: 768px) {\n  }\n`;\n\nexport const RateAvg = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  color: #f2efee;\n  border: 1px solid #f2efee;\n  width: 50px;\n  height: 50px;\n`;\n\nexport const MovieRelease = styled.p`\n  display: flex;\n  gap: 4px;\n  align-items: center;\n  color: #f2efee;\n`;\n","import { Container } from 'components/SharedLayout/SharedLayout.styled';\nimport {\n  List,\n  Item,\n  MovieLink,\n  MoviePoster,\n  MovieRelease,\n  MovieTitle,\n  RateAvg,\n} from './MoviesList.styled';\nimport getPercentage from 'tools/getPercentage';\nimport { getReviewColor } from 'tools/getReviewColor';\nimport { CiCalendar } from 'react-icons/ci';\nimport defPoster from '../../img/def_poster.png';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <Container>\n      <List>\n        {movies.map(\n          ({ id, original_title, poster_path, rate_avg, release_date }) => (\n            <Item key={id}>\n              <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                <MoviePoster\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                      : defPoster\n                  }\n                  alt={original_title}\n                />\n                <RateAvg\n                  style={{\n                    backgroundColor: getReviewColor(getPercentage(rate_avg)),\n                  }}\n                >\n                  {getPercentage(rate_avg)}\n                </RateAvg>\n                <MovieTitle>{original_title}</MovieTitle>\n                {release_date && (\n                  <MovieRelease>\n                    <CiCalendar /> {release_date}\n                  </MovieRelease>\n                )}\n              </MovieLink>\n            </Item>\n          )\n        )}\n      </List>\n    </Container>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  padding-top: 60px;\n`;\n\nexport const SearchInput = styled.input`\n  width: 200px;\n  padding: 12px;\n  border-radius: 22px;\n  border: 2px solid #f2efee;\n  color: #f2efee;\n  background-color: transparent;\n\n  &:focus {\n    outline: none;\n  }\n  &:focus + label {\n    top: -40%;\n    color: #8bd538;\n  }\n\n  @media screen and (min-width: 428px) {\n    width: 250px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const SearchInputLabel = styled.label`\n  text-align: center;\n  position: absolute;\n  top: 25%;\n  left: 5%;\n  color: #f2efee;\n  width: 105px;\n  transition: all 200ms linear;\n`;\nexport const SearchBtn = styled.button`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  border: none;\n  background-color: #8bd538;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: opacity 350ms linear;\n\n  &:hover,\n  &:focus {\n    opacity: 0.8;\n  }\n\n  @media screen and (min-width: 428px) {\n    width: 50px;\n    height: 50px;\n  }\n`;\n","import { Container } from 'components/SharedLayout/SharedLayout.styled';\nimport {\n  SearchForm,\n  SearchInput,\n  SearchInputLabel,\n  SearchBtn,\n} from './MoviesSearch.styled';\nimport { CiSearch } from 'react-icons/ci';\n\nconst MoviesSearch = ({ search }) => {\n  const handleSearch = event => {\n    event.preventDefault();\n    search(event.target.search.value);\n    event.currentTarget.reset();\n  };\n\n  return (\n    <Container>\n      <SearchForm onSubmit={handleSearch}>\n        <div style={{ position: 'relative' }}>\n          <SearchInput\n            id=\"search-input\"\n            type=\"text\"\n            name=\"search\"\n            autoComplete=\"off\"\n            required\n          />\n          <SearchInputLabel htmlFor=\"search-input\">\n            Search movie\n          </SearchInputLabel>\n        </div>\n        <SearchBtn type=\"submit\">\n          <CiSearch fill=\"#F2EFEE\" size={25} />\n        </SearchBtn>\n      </SearchForm>\n    </Container>\n  );\n};\n\nexport default MoviesSearch;\n","import { Pagination } from '@mui/material';\nimport { Container } from 'components/SharedLayout/SharedLayout.styled';\n\nexport const MoviesPagination = ({ pageQty, pg, onChange }) => {\n  const handlePaginationChange = (_, num) => {\n    onChange(num);\n  };\n\n  return (\n    <Container>\n      <Pagination\n        count={pageQty}\n        page={pg}\n        onChange={handlePaginationChange}\n        color={'success'}\n        sx={{\n          color: '#F2EFEE',\n          stroke: '#F2EFEE',\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '30px',\n\n          '& .MuiPaginationItem-root': {\n            color: '#F2EFEE',\n          },\n          '& .MuiPaginationItem-page': {\n            '&:hover:not(.Mui-selected):not(:first-of-type), &:focus:not(.Mui-selected):not(:first-of-type)':\n              {\n                color: '#8BD538',\n              },\n          },\n        }}\n      />\n    </Container>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getMoviesBySearch } from 'movies-api';\nimport MoviesSearch from 'components/MoviesSearch/MoviesSearch';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { ScrollUp } from 'tools/ScrollUp/ScrollUp';\nimport { notification } from 'tools/notification';\nimport { smoothScroll } from 'tools/SmoothScroll';\nimport { MoviesPagination } from 'components/Pagination/Pagination';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n\n  const [movies, setMovies] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [pg, setPg] = useState(1);\n  const [pageQty, setPageQty] = useState(0);\n\n  const handleSearch = value => {\n    setPg(1);\n    setSearchParams({ query: value, page: pg });\n  };\n\n  useEffect(() => {\n    const queryForSearch = searchParams.get('query') || '';\n    if (!queryForSearch) return;\n    setLoader(true);\n\n    const fetchMoviesBySearch = async () => {\n      try {\n        const { page, results, total_pages } = await getMoviesBySearch(\n          queryForSearch,\n          pg\n        );\n\n        setMovies(results);\n        setPg(page);\n        setPageQty(total_pages);\n        setSearchParams({ query: queryForSearch, page: pg });\n\n        if (!results.length) {\n          setSearchParams({});\n          return notification(\n            `Sorry, no movies found on query ${queryForSearch}`\n          );\n        }\n\n        return results;\n      } catch ({ message }) {\n        notification(message);\n      } finally {\n        setLoader(false);\n\n        smoothScroll('movieList');\n      }\n    };\n    fetchMoviesBySearch();\n  }, [searchParams, pg, setSearchParams]);\n\n  return (\n    <>\n      {loader && <Loader />}\n      <MoviesSearch search={handleSearch} />\n\n      {pageQty > 1 && (\n        <MoviesPagination pageQty={pageQty} pg={pg} onChange={setPg} />\n      )}\n\n      {movies.length > 0 && <MoviesList movies={movies} location={location} />}\n\n      <ScrollUp />\n    </>\n  );\n};\n\nexport default Movies;\n","import styled from 'styled-components';\n\nexport const ScrollUpBtn = styled.button`\n  width: 80px;\n  height: 80px;\n  position: fixed;\n  bottom: 40px;\n  right: 36px;\n  border-radius: 50%;\n  border: 3px solid #f2efee;\n  background-color: #8a1d21;\n  transition: transform 200ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { ScrollUpBtn } from './ScrollUp.styled';\nimport { CiCircleChevUp } from 'react-icons/ci';\n\nexport const ScrollUp = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollPosition = window.scrollY;\n      if (scrollPosition > 200) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <ScrollUpBtn\n      onClick={scrollToTop}\n      style={{ display: isVisible ? 'block' : 'none' }}\n    >\n      <CiCircleChevUp size={33} fill=\"#F2EFEE\" />\n    </ScrollUpBtn>\n  );\n};\n","const getPercentage = num => {\n  return Math.ceil(Number(num) * 10);\n};\n\nexport default getPercentage;\n","export const getReviewColor = percentage => {\n  let color = '';\n  switch (true) {\n    case percentage >= 70:\n      color = '#1cb114';\n      break;\n    case percentage > 30:\n      color = '#c3c737';\n      break;\n    case percentage === 0:\n      color = '#64645b';\n      break;\n    default:\n      color = '#8BD538';\n  }\n  return color;\n};\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","MovieTitle","_templateObject3","MovieLink","Link","_templateObject4","MoviePoster","_templateObject5","RateAvg","_templateObject6","MovieRelease","_templateObject7","_ref","movies","location","_jsx","Container","children","map","_ref2","id","original_title","poster_path","rate_avg","release_date","_jsxs","to","concat","state","from","src","defPoster","alt","style","backgroundColor","getReviewColor","getPercentage","CiCalendar","SearchForm","SearchInput","SearchInputLabel","SearchBtn","search","onSubmit","event","preventDefault","target","value","currentTarget","reset","position","type","name","autoComplete","required","htmlFor","CiSearch","fill","size","MoviesPagination","pageQty","pg","onChange","Pagination","count","page","handlePaginationChange","_","num","color","sx","stroke","display","justifyContent","marginTop","Movies","searchParams","setSearchParams","useSearchParams","useLocation","setMovies","useState","loader","setLoader","setPg","setPageQty","useEffect","queryForSearch","get","async","results","total_pages","getMoviesBySearch","query","length","notification","message","smoothScroll","fetchMoviesBySearch","_Fragment","Loader","MoviesSearch","MoviesList","ScrollUp","ScrollUpBtn","isVisible","setIsVisible","handleScroll","scrollPosition","window","scrollY","addEventListener","removeEventListener","onClick","scrollToTop","scrollTo","top","behavior","CiCircleChevUp","Math","ceil","Number","percentage"],"sourceRoot":""}