{"version":3,"file":"static/js/819.97051017.chunk.js","mappings":"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","sources":["movies-api.js","components/MoviesList/MoviesList.styled.js","tools/getPercentage.js","tools/getReviewColor.js","components/MoviesList/MoviesList.js","tools/ScrollUp/ScrollUp.styled.js","tools/ScrollUp/ScrollUp.js","pages/Home.js","tools/notification.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '4441e8220eedb15302cf9a6e811d294b';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\naxios.defaults.params = { api_key: KEY };\n\nexport const getTrending = async () => {\n  const { data } = await axios.get('/3/trending/movie/week');\n  return data.results;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`/3/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesBySearch = async (query, page) => {\n  const { data } = await axios.get(\n    `/3/search/movie?query=${query}&page=${page}`\n  );\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(`/3/movie/${id}/credits`);\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`/3/movie/${id}/reviews`);\n  return data;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 40px;\n  padding: 60px 0;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n  transition: transform 400ms linear;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n`;\n\nexport const MovieTitle = styled.p`\n  text-align: center;\n  font-weight: 700;\n  font-size: 24px;\n  max-width: 300px;\n  color: #f2efee;\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const MoviePoster = styled.img`\n  width: 250px;\n`;\n\nexport const RateAvg = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  color: #f2efee;\n  border: 1px solid #f2efee;\n  width: 50px;\n  height: 50px;\n`;\n\nexport const MovieRelease = styled.p`\n  display: flex;\n  gap: 4px;\n  align-items: center;\n  color: #f2efee;\n`;\n","export const getPercentage = number => {\n  return Math.ceil(Number(number) * 10);\n};\n","export const getReviewColor = percentage => {\n  let color = '';\n  switch (true) {\n    case percentage >= 70:\n      color = '#1cb114';\n      break;\n    case percentage > 30:\n      color = '#c3c737';\n      break;\n    case percentage === 0:\n      color = '#64645b';\n      break;\n    default:\n      color = '#8BD538';\n  }\n  return color;\n};\n","import { Container } from 'components/SharedLayout/SharedLayout.styled';\nimport {\n  List,\n  Item,\n  MovieLink,\n  MoviePoster,\n  MovieRelease,\n  MovieTitle,\n  RateAvg,\n} from './MoviesList.styled';\nimport { getPercentage } from 'tools/getPercentage';\nimport { getReviewColor } from 'tools/getReviewColor';\nimport { CiCalendar } from 'react-icons/ci';\n\nexport const MoviesList = ({ movies, location }) => {\n  return (\n    <Container>\n      <List>\n        {movies.map(({ id, original_title, rate_avg, release_date }) => (\n          <Item key={id}>\n            <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n              <MoviePoster />\n              <RateAvg\n                style={{\n                  backgroundColor: getReviewColor(getPercentage(rate_avg)),\n                }}\n              >\n                {getPercentage(rate_avg)}\n              </RateAvg>\n              <MovieTitle>{original_title}</MovieTitle>\n              {release_date && (\n                <MovieRelease>\n                  <CiCalendar /> {release_date}\n                </MovieRelease>\n              )}\n            </MovieLink>\n          </Item>\n        ))}\n      </List>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ScrollUpBtn = styled.button`\n  width: 80px;\n  height: 80px;\n`;\n","import { useState, useEffect } from 'react';\nimport { ScrollUpBtn } from './ScrollUp.styled';\nimport { CiCircleChevUp } from 'react-icons/ci';\n\nexport const ScrollUp = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollPosition = window.scrollY;\n      if (scrollPosition > 200) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <ScrollUpBtn\n      onClick={scrollToTop}\n      style={{ display: isVisible ? 'block' : 'none' }}\n    >\n      <CiCircleChevUp />\n    </ScrollUpBtn>\n  );\n};\n","import { getTrending } from 'movies-api';\nimport { Loader } from 'components/Loader/Loader';\nimport { useState, useEffect } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { notification } from 'tools/notification';\nimport { ScrollUp } from 'tools/ScrollUp/ScrollUp';\n\nconst Home = () => {\n  const [trending, setTrending] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    setLoader(true);\n\n    const fetchTrending = async () => {\n      try {\n        const response = await getTrending();\n        setTrending(response);\n      } catch ({ message }) {\n        notification(message);\n      } finally {\n        setLoader(false);\n      }\n    };\n    fetchTrending();\n  }, []);\n\n  return (\n    <>\n      {loader && <Loader />}\n      {trending.length > 0 && <MoviesList movies={trending} />}\n      <ScrollUp />\n    </>\n  );\n};\n\nexport default Home;\n","import { Notify } from 'notiflix';\n\nexport const notification = message => {\n  Notify.init({\n    backOverlay: true,\n    info: {\n      background: '#8BD538',\n    },\n  });\n  return Notify.info(message);\n};\n"],"names":["axios","api_key","List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","MovieTitle","_templateObject3","MovieLink","Link","_templateObject4","MoviePoster","_templateObject5","RateAvg","_templateObject6","MovieRelease","_templateObject7","getPercentage","number","Math","ceil","Number","getReviewColor","percentage","color","MoviesList","_ref","movies","location","_jsx","Container","children","map","_ref2","id","original_title","rate_avg","release_date","_jsxs","to","concat","state","from","style","backgroundColor","CiCalendar","ScrollUpBtn","ScrollUp","isVisible","setIsVisible","useState","useEffect","handleScroll","scrollPosition","window","scrollY","addEventListener","removeEventListener","onClick","scrollToTop","scrollTo","top","behavior","display","CiCircleChevUp","Home","trending","setTrending","loader","setLoader","async","response","data","results","getTrending","message","Notify","backOverlay","info","background","notification","fetchTrending","_Fragment","Loader","length"],"sourceRoot":""}