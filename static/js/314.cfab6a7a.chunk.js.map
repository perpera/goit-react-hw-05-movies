{"version":3,"file":"static/js/314.cfab6a7a.chunk.js","mappings":"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","sources":["components/ScrollUpBtn/ScrollUp.styled.js","components/ScrollUpBtn/ScrollUpBtn.js","helpers/determineReviewColor.js","helpers/makePercentage.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.js","components/GoBackBtn/GoBackBtn.styled.js","components/GoBackBtn/GoBackBtn.js","pages/MovieDetails.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const ScrollUpButton = styled.button`\n  position: fixed;\n  bottom: 40px;\n  right: 37px;\n  background-color: #0dcb2d70;\n  border: 3px solid #fff;\n  border-radius: 50%;\n  width: 90px;\n  height: 90px;\n  cursor: pointer;\n  transition: transform 300ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 100px;\n    height: 100px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { ScrollUpButton } from './ScrollUp.styled';\nimport { CiCircleChevUp } from 'react-icons/ci';\n\nexport const ScrollUpBtn = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollPosition = window.scrollY;\n      if (scrollPosition > 200) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <ScrollUpButton\n      onClick={scrollToTop}\n      style={{ display: isVisible ? 'block' : 'none' }}\n    >\n      <CiCircleChevUp size={33} fill=\"#F2EFEE\" />\n    </ScrollUpButton>\n  );\n};\n","export const determineReviewColor = percentage => {\n  let color = '';\n  switch (true) {\n    case percentage >= 70:\n      color = '#1cb114';\n      break;\n    case percentage > 30:\n      color = '#c3c737';\n      break;\n    case percentage === 0:\n      color = '#64645b';\n      break;\n    default:\n      color = '#8BD538';\n  }\n  return color;\n};\n","const makePercentage = num => {\n  return Math.ceil(Number(num) * 10);\n};\n\nexport default makePercentage;\n","import { styled } from 'styled-components';\n\nexport const MovieInfoContainer = styled.div`\n  padding: 60px 0;\n`;\nexport const InfoSectionWrapper = styled.div`\n  position: relative;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(rgba(4, 4, 4, 0.4), rgba(4, 4, 4, 0.4))\n        no-repeat center/cover,\n      url(${props => props.$backdropSrc}) no-repeat center/cover;\n    filter: blur(15px);\n    z-index: -1;\n  }\n`;\nexport const Info = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  @media screen and (max-width: 458px) {\n    flex-direction: column;\n  }\n  @media screen and (min-width: 428px) {\n    flex-direction: row;\n  }\n  @media screen and (min-width: 768px) {\n    gap: 50px;\n  }\n`;\nexport const MovieInfoPoster = styled.img`\n  border-radius: 20px;\n  width: 200px;\n\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n`;\nexport const MovieDescription = styled.div`\n  padding: 10px;\n  background-color: #d2d5d378;\n  backdrop-filter: blur(15px);\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 200px;\n  min-height: 315px;\n  @media screen and (min-width: 768px) {\n    min-width: 300px;\n  }\n  @media screen and (min-width: 1440px) {\n    min-width: 500px;\n  }\n`;\nexport const MovieInfoTitle = styled.h3`\n  font-size: 25px;\n  @media screen and (min-width: 768px) {\n    font-size: 40px;\n  }\n`;\nexport const ScoreText = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\nexport const MovieInfoScore = styled.span`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => props.color};\n`;\n\nexport const SubTitle = styled.h4`\n  font-size: 20px;\n  font-style: italic;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n`;\n\nexport const Line = styled.hr`\n  width: 100%;\n\n  border-color: #000;\n`;\n","import defaultPoster from '../../images/def_poster.png';\nimport {\n  MovieInfoContainer,\n  InfoSectionWrapper,\n  Info,\n  MovieInfoPoster,\n  MovieDescription,\n  MovieInfoTitle,\n  Line,\n  ScoreText,\n  MovieInfoScore,\n  SubTitle,\n  GenresList,\n} from './MovieInfo.styled';\nimport makePercentage from '../../helpers/makePercentage';\nimport { determineReviewColor } from '../../helpers/determineReviewColor';\n\nconst MovieInfo = ({\n  movie: {\n    backdrop_path,\n    original_title,\n    poster_path,\n    vote_average,\n    overview,\n    genres,\n  },\n}) => {\n  const posterUrl = `https://image.tmdb.org/t/p/w500${poster_path}`;\n  const posterSrc = poster_path ? posterUrl : defaultPoster;\n\n  const backdropUrl = `https://image.tmdb.org/t/p/w500${backdrop_path}`;\n  const backdropSrc = backdrop_path ? backdropUrl : defaultPoster;\n\n  return (\n    <MovieInfoContainer>\n      <InfoSectionWrapper $backdropSrc={backdropSrc}>\n        <Info>\n          <MovieInfoPoster src={posterSrc} alt=\"original_title\" />\n          <MovieDescription>\n            <MovieInfoTitle>{original_title}</MovieInfoTitle>\n            <Line />\n            <ScoreText>\n              User score:\n              <MovieInfoScore\n                color={determineReviewColor(makePercentage(vote_average))}\n              >\n                {makePercentage(vote_average)}%\n              </MovieInfoScore>\n            </ScoreText>\n\n            <SubTitle>Overview</SubTitle>\n            <p>{overview}</p>\n\n            {genres.length > 0 && (\n              <>\n                <SubTitle>Genres</SubTitle>\n                <GenresList>\n                  {genres.map(genre => (\n                    <p key={genre.id}>{genre.name}</p>\n                  ))}\n                </GenresList>\n              </>\n            )}\n          </MovieDescription>\n        </Info>\n      </InfoSectionWrapper>\n    </MovieInfoContainer>\n  );\n};\n\nexport default MovieInfo;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const GoBackLink = styled(Link)`\n  margin-top: 24px;\n  display: flex;\n  gap: 4px;\n  padding: 4px;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  color: #f2efee;\n  border: 2px solid #f2efee;\n  border-radius: 22px;\n  transition: color 200ms linear, border-color 200ms linear;\n  &:hover,\n  &:focus {\n    color: #8bd538;\n    border-color: #8bd538;\n  }\n`;\n","import { FaArrowLeftLong } from 'react-icons/fa6';\nimport { Container } from '../../components/App/App.styled';\nimport { GoBackLink } from './GoBackBtn.styled';\n\nconst GoBackBtn = ({ path }) => {\n  return (\n    <Container>\n      <GoBackLink to={path}>\n        <FaArrowLeftLong />\n        Go back\n      </GoBackLink>\n    </Container>\n  );\n};\n\nexport default GoBackBtn;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from '../service/movies-api';\nimport { Loader } from '../components/Loader/Loader';\nimport MovieInfo from '../components/MovieInfo/MovieInfo';\nimport GoBackBtn from '../components/GoBackBtn/GoBackBtn';\nimport { notification } from '../helpers/notification';\nimport { Container, AdLinksWrap, AdLink } from '../components/App/App.styled';\nimport { ScrollUpBtn } from '../components/ScrollUpBtn/ScrollUpBtn';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    setLoader(true);\n\n    const fetchMovieById = async () => {\n      try {\n        const movie = await getMovieById(movieId);\n\n        setMovieInfo(movie);\n      } catch ({ message }) {\n        notification(message);\n      } finally {\n        setLoader(false);\n      }\n    };\n    fetchMovieById();\n  }, [movieId]);\n\n  const goBackPath = location?.state?.from ?? '/';\n\n  return (\n    <Container>\n      {loader && <Loader />}\n      <GoBackBtn path={goBackPath} />\n      {movieInfo && <MovieInfo movie={movieInfo} />}\n      <AdLinksWrap>\n        <AdLink to=\"cast\">Cast</AdLink>\n        <AdLink to=\"reviews\">Reviews</AdLink>\n      </AdLinksWrap>\n      <ScrollUpBtn />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["ScrollUpButton","styled","_templateObject","_taggedTemplateLiteral","ScrollUpBtn","isVisible","setIsVisible","useState","useEffect","handleScroll","scrollPosition","window","scrollY","addEventListener","removeEventListener","_jsx","onClick","scrollToTop","scrollTo","top","behavior","style","display","children","CiCircleChevUp","size","fill","determineReviewColor","percentage","color","num","Math","ceil","Number","MovieInfoContainer","InfoSectionWrapper","_templateObject2","props","$backdropSrc","Info","_templateObject3","MovieInfoPoster","_templateObject4","MovieDescription","_templateObject5","MovieInfoTitle","_templateObject6","ScoreText","_templateObject7","MovieInfoScore","_templateObject8","SubTitle","_templateObject9","GenresList","_templateObject10","Line","_templateObject11","_ref","movie","backdrop_path","original_title","poster_path","vote_average","overview","genres","posterUrl","concat","posterSrc","defaultPoster","backdropUrl","backdropSrc","_jsxs","src","alt","makePercentage","length","_Fragment","map","genre","name","id","GoBackLink","Link","path","Container","to","FaArrowLeftLong","MovieDetails","_location$state$from","_location$state","movieId","useParams","location","useLocation","movieInfo","setMovieInfo","loader","setLoader","async","getMovieById","message","notification","fetchMovieById","goBackPath","state","from","Loader","GoBackBtn","MovieInfo","AdLinksWrap","AdLink","Suspense","fallback","Outlet"],"sourceRoot":""}